name: Secure Workflows with gh-refme

on:
  # Run weekly to ensure workflows remain secure
  schedule:
    - cron: '0 0 * * 0'  # Run at midnight on Sundays
  
  # Allow manual triggering
  workflow_dispatch:
  
  # Run when workflow files are modified
  push:
    paths:
      - '.github/workflows/*.yml'
      - '.github/workflows/*.yaml'
    branches-ignore:
      - 'gh-refme-secure-*'  # Avoid loops from gh-refme's own PRs

jobs:
  secure-workflows:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      actions: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed to create PRs
          token: ${{ secrets.WORKFLOW_TOKEN }}
          
      - name: Run gh-refme
        run: |
          # Get a release of gh-refme
          curl -sL -o /usr/local/bin/gh-refme https://raw.githubusercontent.com/metcalfc/gh-refme/refs/tags/v1.5.0/gh-refme
          chmod +x /usr/local/bin/gh-refme
          
          # Run gh-refme and capture all output for reference
          echo "Running gh-refme on workflow files..."
          gh-refme .github/workflows/*.{yml,yaml} 2>&1 | tee refme_output.log
          
          # Check if any changes were made
          if git diff --quiet; then
            echo "No changes made, all workflows are already secure!"
            exit 0
          fi
          
          # Create branch name with timestamp
          BRANCH_NAME="gh-refme-secure-$(date +%Y%m%d%H%M%S)"
          git checkout -b $BRANCH_NAME

          # Commit and push changes
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .github/workflows/*.yml || true
          git add .github/workflows/*.yaml || true
          git commit -m "security: pin workflow actions to full commit hashes" || { echo "No changes to commit"; exit 0; }
          git push origin $BRANCH_NAME || { echo "Failed to push changes"; exit 1; }
          
          # Create PR description directly from the changes
          echo "# GitHub Actions Security Update" > pr_description.md
          echo "" >> pr_description.md
          echo "This PR updates GitHub Actions from tags/branches to full commit hashes for improved security." >> pr_description.md
          echo "" >> pr_description.md
          echo "## Changes Made" >> pr_description.md
          echo "" >> pr_description.md
          
          # Add table headers
          echo "| File | Original Reference | Pinned Commit |" >> pr_description.md
          echo "|------|-------------------|---------------|" >> pr_description.md
          
          # Extract changes from the log file
          CURRENT_FILE=""
          while IFS= read -r line; do
            if [[ "$line" =~ ^Processing[[:space:]](.+)\.\.\. ]]; then
              CURRENT_FILE="${BASH_REMATCH[1]}"
              echo "Now processing file: $CURRENT_FILE"
            elif [[ "$line" =~ Line[[:space:]]+[0-9]+:[[:space:]]+Updated[[:space:]]+([^[:space:]]+)[[:space:]]+\-\>[[:space:]]+([^[:space:]]+) ]]; then
              ORIGINAL_REF="${BASH_REMATCH[1]}"
              PINNED_HASH="${BASH_REMATCH[2]}"
              
              if [ -n "$CURRENT_FILE" ]; then
                WORKFLOW_FILE=$(basename "$CURRENT_FILE")
                echo "Found change in $WORKFLOW_FILE: $ORIGINAL_REF -> $PINNED_HASH"
                
                # Add row to the table
                echo "| $WORKFLOW_FILE | $ORIGINAL_REF | $PINNED_HASH |" >> pr_description.md
              fi
            fi
          done < refme_output.log
            
          # Extract repo URL for the link
          REPO_URL=$(git config --get remote.origin.url | sed -E 's/.*github.com[:\/]([^\.]+).*/\1/')
            
          echo "" >> pr_description.md
          echo "Generated automatically by [gh-refme](https://github.com/$REPO_URL). Reviews should verify that the pinned commits match the intended references." >> pr_description.md
          
          # Display the actual changes that will be made
          echo "Changes to be included in PR:"
          git diff --stat HEAD~1
            
          # Create PR with the detailed description
          gh pr create --title "Security: Pin GitHub Actions to full commit hashes" \
            --body-file pr_description.md \
            --base main \
            --head $BRANCH_NAME
        env:
          GH_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
