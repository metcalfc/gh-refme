name: Secure Workflows with gh-refme

on:
  # Run weekly to ensure workflows remain secure
  schedule:
    - cron: '0 0 * * 0'  # Run at midnight on Sundays
  
  # Allow manual triggering
  workflow_dispatch:
  
  # Run when workflow files are modified
  push:
    paths:
      - '.github/workflows/*.yml'
      - '.github/workflows/*.yaml'
    branches-ignore:
      - 'gh-refme-secure-*'  # Avoid loops from gh-refme's own PRs

jobs:
  secure-workflows:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed to create PRs
          
      - name: Run gh-refme
        run: |
          # Get a release of gh-refme
          curl -sL -o /usr/local/bin/gh-refme https://raw.githubusercontent.com/metcalfc/gh-refme/refs/tags/v1.5.0/gh-refme
          chmod +x /usr/local/bin/gh-refme
          
          # Create branch name with timestamp
          BRANCH_NAME="gh-refme-secure-$(date +%Y%m%d%H%M%S)"
          git checkout -b $BRANCH_NAME
          
          # Run gh-refme on all workflow files
          echo "Running gh-refme on workflow files..."
          gh-refme .github/workflows/*.{yml,yaml}
          
          # Check if any changes were made
          if git diff --quiet; then
            echo "No changes made, all workflows are already secure!"
            exit 0
          fi
          
          # Commit and push changes
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .github/workflows/*.yml || true
          git add .github/workflows/*.yaml || true
          git commit -m "security: pin workflow actions to full commit hashes" || { echo "No changes to commit"; exit 0; }
          git push origin $BRANCH_NAME || { echo "Failed to push changes"; exit 1; }
          
          # Create a PR only if there were changes to push
          # Generate a report of all changes for the PR description
          echo "# GitHub Actions Security Update" > pr_description.md
          echo "\nThis PR updates GitHub Actions from tags/branches to full commit hashes for improved security.\n" >> pr_description.md
          echo "## Changes Made\n" >> pr_description.md
          
          # Extract all changes and create a table with links
          echo "| File | Original Reference | Pinned Commit | Validation Links |" >> pr_description.md
          echo "|------|-------------------|--------------|-----------------|" >> pr_description.md
          
          for file in $(git diff --name-only); do
            if [[ "$file" == *".github/workflows"* ]]; then
              # Find all the changes in this file
              git diff -U0 "$file" | grep -E "^\+.*uses:.*@.*# was:" | while read -r line; do
                # Extract components
                WORKFLOW_FILE=$(basename "$file")
                ORIGINAL_REF=$(echo "$line" | sed -E 's/.*# was: ([^ ]+).*/\1/')
                PINNED_HASH=$(echo "$line" | sed -E 's/.*uses: ([^#]+) #.*/\1/')
                
                # Parse into owner/repo@ref format
                if [[ "$ORIGINAL_REF" =~ ^([^/]+)/([^@]+)@(.+)$ ]]; then
                  OWNER="${BASH_REMATCH[1]}"
                  REPO="${BASH_REMATCH[2]}"
                  REF="${BASH_REMATCH[3]}"
                  
                  # Create validation links
                  ORIGINAL_LINK="https://github.com/$OWNER/$REPO/tree/$REF"
                  COMMIT_LINK="https://github.com/$OWNER/$REPO/commit/$(echo $PINNED_HASH | cut -d'@' -f2)"
                  
                  # Add row to the table
                  echo "| $WORKFLOW_FILE | $ORIGINAL_REF | $PINNED_HASH | [Original]($ORIGINAL_LINK) â€¢ [Commit]($COMMIT_LINK) |" >> pr_description.md
                fi
              done
            fi
          done
          
          echo "\nGenerated automatically by [gh-refme](https://github.com/$(git config --get remote.origin.url | sed 's/.*github.com[:\/]\(.*\)\.git/\1/')). Reviews should verify that the pinned commits match the intended references." >> pr_description.md
          
          # Create PR with the detailed description
          gh pr create --title "Security: Pin GitHub Actions to full commit hashes" \
            --body-file pr_description.md \
            --base main \
            --head $BRANCH_NAME
        env:
          GH_TOKEN: ${{ github.token }}
